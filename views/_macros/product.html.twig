{% macro gridproduct(product, options=['carousel','image','details']) %}
    {% spaceless %}
    {% set product =  product|merge({'variant':product.product|values_in('variant')}) %}
    {% set product =  product|merge({'attributes':product.variant|values_in(['price','compare_price','save_price','save_percent','color'])}) %}
    {% import _self as this %}
    {% import "/_macros/base.html.twig" as base %}
    <div class="product">
        {% if 'image' in options %}
            {# Grab image based on color facets #}
            {% set img_url = product.thumbnail %}
            {% if product.attributes.color|length > 1 %}
                {% set current_colors = app.request.get.f.color|keys %}
                {% for variant in product.variant 
                    if variant.status == 'active' and variant.color in current_colors and variant.images is not empty %}
                        {% set img_url = variant.thumbnail %}
                {% endfor %}
            {% endif %}
        {% set secure =  app.url_asset | slice(0,5)  %}
        {% if secure == 'https' %}
        {% set img_url = img_url | replace({'http:':'https:'}) %}
            {% endif %}
            {# Begin product image #}               
            <div class="image">
                <a class="thumbnail" href="{{app.url}}/product/{{product.slug}}"> 
                    <img onerror="this.src='{{ app.url_asset }}/assets/images/product/image-250x250.jpg'" id="product-image-{{product.id}}" src="{{ img_url }}" class="img-responsive" data-image-source="{{ img_url }}">
                </a>
            </div>                            
            {# End product image #}
            {# There is no point in having a carousel without an image, so it is moved inside here #}
            {% if 'carousel' in options %}
                {# Begin image carousel insert #}
                {{ this.carousel(product) }}
                {# End image carousel insert #}
            {% endif %}
        {% endif %}
        {% if 'details' in options %}
            {# Begin product details #}
            <a href="{{app.url}}/product/{{product.slug}}">
                <header>
                    <div class="brand">{{product.brand}}</div>
                    <h5 class="product-name">{{product.name}}</h5>                    
                </header>
                <div class="pricing">
                    {% if product.attributes.price %}
                    <div class="price">{{ this.price(product.attributes.price) }}</div>
                    {% endif %}
                    {% if product.attributes.price.0 >= 100 %}
                    <div class="price-per-month hidden-xs">
                        <span data-tooltip data-toggle="tooltip" data-original-title="Spread payments over six months by selecting &quot;Checkout with Paypal&quot; on the Shopping Cart page. Then log in and apply for a &quot;Bill Me Later&quot; account.">{{ this.billmelater(product.attributes.price) }}</span>
                    </div>
                    {% endif %}
                    {% if product.attributes.compare_price|max - product.attributes.price|max > 1  %}
                    <div class="price-regular hidden-xs">Compare at {{ this.price(product.attributes.compare_price) }}</div>
                    <div class="percent hidden-xs">
                        Save up to {{ this.saveprice(product.attributes.save_price) }} {{ this.savepercent(product.attributes.save_percent) }}
                    </div>
                    {% endif %}                
                </div>
                {% set review_score = product.product|values_in('review_score')|merge([product.review_score])|average() %}
                {% if review_score > 0 %}
                <div class="rating">{{ base.rating(review_score) }}</div>
                {% endif %}
            </a>               
            {# End product details #}
        {% endif %}
    </div>
    {% endspaceless %}
{% endmacro %}
{% macro carousel(product) %}
{% spaceless %}
{# Begin image carousel #}
{% if product.attributes.color|length > 1 %}
    {% if product.variant is not empty %}
        {% set carouselHasNext = false %}
        <div class="color-carousel hidden-sm hidden-xs">
            <div id="color-image-carousel-{{product.id}}" class="col-xs-6 col-sm-10 carousel slide" data-ride="carousel">
                <div class="carousel-inner">
                    <div class="item active">
                        {% set colors = [] %}
                        {% for item,child in product.variant if child.status == 'active' and child.images is not empty %}
                            {% if child.color not in colors %}
                                {% set colors = colors|merge([child.color]) %}
                                <div class="thumbnail col-xs-2">
                                    <img onerror="this.src='{{ app.url_asset }}/assets/images/product/image-250x250.jpg'" src="{{ child.thumbnail }}" class="img-responsive" data-image-swap="product-image-{{product.id}}" data-image-swap-src="{{ child.thumbnail }}">
                                </div>
                                {% set carouselblock = carouselblock + 1 %}
                                {% if carouselblock is divisibleby(6) and product.variant[(item + 1)] is defined %}
                                    {% set carouselHasNext = true %}
                                    </div>
                                    <div class="item">
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
            {% if carouselHasNext == true %}
            <div class="col-xs-1 thumbnail">
                <a class="btn btn-info" href="#color-image-carousel-{{product.id}}" data-slide="next">
                    <span class="glyphicon glyphicon-chevron-right"></span>
                </a>
            </div>
            {% endif %}
        </div>
    {% endif %}
{% else %}
    <div class="empty-carousel hidden-sm hidden-xs"></div>
{% endif %}
{# End image carousel #}
{% endspaceless %}
{% endmacro %}
{% macro price(prices) %}
{% spaceless %}
    {% if prices is not iterable %}
        ${{prices|number_format(2)}}
    {% else %}
        {% set min = prices[0] %}
        {% set max = prices[0] %}
        {% for price in prices %}
            {% set min = min > price ? price : min %}
            {% set max = max < price ? price : max %}
        {% endfor %}
        {% if min == max or min == 0 %}
            ${{max|number_format(2)}}
        {% else %}
            ${{min|number_format(2)}} - ${{max|number_format(2)}}
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endmacro %}
{% macro billmelater(prices, text='per month*') %}
{% spaceless %}
    {% if prices is not iterable %}
        ${{(prices/6)|number_format(2)}} {{text}}
    {% else %}
        {% set min = prices[0] %}
        {% set max = prices[0] %}
        {% for price in prices %}
            {% set min = min > price ? price : min %}
            {% set max = max < price ? price : max %}
        {% endfor %}
        {% if max >= 100 %}
            ${{(max/6)|number_format(2)}} {{text}}
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endmacro %}
{% macro saveprice(saveprices) %}
{% spaceless %}
    {% if saveprices is not iterable %}
        ${{saveprices|number_format(2)}}
    {% else %}
        {% set max = saveprices[0] %}
        {% for price in saveprices %}
            {% set max = max < price ? price : max %}
        {% endfor %}
        {% if max > 1 %}
            ${{max|number_format()}}
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endmacro %}
{% macro savepercent(percents) %}
{% spaceless %}
    {% if percents is not iterable %}
        ({{ percents }}%)
    {% else %}
        {% set max = percents[0] %}
        {% for percent in percents %}
            {% set max = max < percent ? percent : max %}
        {% endfor %}
        {% if max > 0 %}
            ({{ max }}%)
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endmacro %}
