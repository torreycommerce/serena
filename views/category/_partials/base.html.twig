   {% spaceless %}
{#
##
##  Url Validation
##
#}
{% if app.request.get.limit is not empty and app.request.get.limit is not integer  %}
    {% do app.redirect('/' ~ app.request.url,{},'404') %}
{% endif %}
{% if app.request.get.page is not empty and app.request.get.page is not integer  %}
    {% do app.redirect('/' ~ app.request.url,{},'404') %}
{% endif %}


{#
##
##  Default query and attribute filters
##
#}

{% set default_attributes = default_attributes is not defined ? "color,category_id,brand,type,gender,size,price,review_score": default_attributes %}
{% if category.facets is not empty %}
    {% set default_attributes = category.facets %}
{% endif %}
{% set limit = app.request.get.limit|default(24) %}

{#
##
##  Sort options
##
#}
{% set sort_options = {
    'Popularity':'product.variant.popularity:-1',
    'Product Name':'name:1',
    'Price: Lowest First':'product.variant.price:1',
    'Price: Highest First':'product.variant.price:-1',
    'Price: Savings %':'product.variant.save_percent:-1',
    'Price: Savings $':'product.variant.save_price:-1',
    'Best Rating':'product.review_score:-1',
    'Color':'product.variant.color:1',
} %}

{% if app.request.get.s is not empty %}
    {% set search_fields = ['name^2','type^2','color^2','brand^2','tags^2','keywords^2','_all'] %}
    {% set sort_options = {'Search Relevance':'_score:-1,product.variant.popularity:-1'}|merge(sort_options) %}
{% endif %}

{% if app.request.get.sf is not empty %}
    {% set search_fields = app.request.get.sf|split(',') %}
{% endif %}

{% set sortBy = sort_options[app.request.get.sort] is defined ? sort_options[app.request.get.sort] : sort_options|first %}
{% set sortByTitle = sort_options[app.request.get.sort] is defined ? app.request.get.sort : sort_options|keys|first %}


{#
##
##  Attribute filter GET parse
##
#}
{% set filter_query = {} %}
{% set filter_request = {} %}
{% if app.request.get.f is defined %}
    {% set filter_request = app.request.get.f %}
    {% for name,action in app.request.get.f %}
        {% if action.range is defined %}
            {% set values = action.range|split(',') %}
            {% if values|length > 1 %}
                {% set value = {'$gte':values|first,'$lte':values|last} %}
                {% set filter_query = filter_query|merge({(name): value})  %}
            {% else %}
                {% set value = {'$gte':values|first|number_format(0,'.','')} %}
                {% set filter_query = filter_query|merge({(name): value})  %}
            {% endif %}
        {% elseif action|join() is not empty %}
            {% do app.redirect('/' ~ app.request.url,{},'404') %}
        {% else %}
            {% set value = {'$in':action|keys} %}
            {% set filter_query = filter_query|merge({(name): value})  %}
        {% endif %}
    {% endfor %}
{% endif %}
{#
##
##  Product API query
##
#}
{% set products = api.get('/catalog', {
                            "query":default_query|merge(filter_query),
                            "page":app.request.get.page,
                            "limit":limit,
                            "search":app.request.get.s,
                            "search_in":search_fields,
                            "sort":sortBy
                      }) %}
{#
##
##  Search Suggestion API query
##
#}
{% set search_suggestion = '' %}
{% if products.num_total == 0 and app.request.get.s is not empty %}
    {% set search_suggestion = api.get('/catalog/suggest', {'query':app.request.get.s})|first %}
    {% if search_suggestion == app.request.get.s %}
        {% set search_suggestion = '' %}
    {% else %}
        {% set products = api.get('/catalog', {
                            "query":default_query|merge(filter_query),
                            "page":app.request.get.page,
                            "limit":limit,
                            "search":search_suggestion,
                            "search_in":search_fields,
                            "sort":sortBy
                      }) %}
    {% endif %}
{% endif %}
{#
##
##  Attribute filter API query
##
#}
{% set filters = api.get('/catalog', {
                            "query":default_query,
                            "search":app.request.get.s,
                            "search_in":search_fields,
                            "attributes":default_attributes,
                            "format":"attributes"
                      }) %}

{#
##
##  Redirection rules (if category or request is not found)
##
#}
{% if products.num_total == 0 and app.request.get.f is not defined and app.request.get.s is not defined and category is not defined %}
    {{app.redirect('/')}}
{% endif %}

  <!-- Breadcrumb -->
{% block breadcrumb %}
    {% set categories = app.request.path|split('/') %}
    {% set category_crumbs = [] %}
    {% for category in categories %}
        {% set category_link = category_link ~ '/' ~ category %}
        {% set category_title = category|replace('-',' ')|title %}
        {% set category_crumbs = category_crumbs|merge({(category_title):('/category' ~ category_link)})%}
    {% endfor %}
    {{ base.breadcrumbs(category_crumbs) }}
{% endblock %}
  <!-- /Breadcrumb -->  
<div id="wrap">
  <div class="container-fluid title"> <!-- Title -->
    <div class="row">
      <div class="col-sm-12">
        <h2>{{ name|default(category.name) }}</h2>
        <p class="hidden-xs">{{ description|default(category.description) }}</p>
      </div>
    </div>
  </div> <!-- /Title -->
  <div class="container-fluid">  <!-- Products Grid -->
    <div class="row"> 
      <div class="col-sm-9 col-md-9"> <!-- Products Grid Col. Size -->
        <div class="products-filter clearfix">  <!-- Products Filter -->
          <div class="col-lg-3 col-md-3 col-sm-3 hidden-xs row"> 
              <p class="pull-left"> Showing <strong>{{ products.num_total }}</strong> products </p>
          </div>
          {# Begin paging #}
          <div class="pagination-top">
              {{ base.pagination(products.num_total,limit,5) }}
          </div>
          {# End paging #}

          {# Begin filters #}
          <div id="items-per-page" class="filter">
              <form class="form-inline">
                  <span class="small">&nbsp;&nbsp;View:&nbsp;</span>
                  <button class="btn-default-border dropdown-toggle" data-toggle="dropdown" href="#">{{ limit }}&nbsp;
                      <i class="glyphicon glyphicon-chevron-down"></i>
                  </button>
                  <ul class="dropdown-menu dropdown-category-view pull-right text-left">                                
                      <li><a href="{{app.request.getUrl({'limit':24,'page':1})}}">24</a></li>
                      <li><a href="{{app.request.getUrl({'limit':36,'page':1})}}">36</a></li>
                      <li><a href="{{app.request.getUrl({'limit':48,'page':1})}}">48</a></li>
                      <li><a href="{{app.request.getUrl({'limit':60,'page':1})}}">60</a></li>
                  </ul>
              </form>
          </div>   
          <div id="sort-by" class="filter form-inline">
              <form class="form-inline">
                  <span class="small">Sort By:&nbsp;</span>
                  <button class="btn-default-border dropdown-toggle" data-toggle="dropdown" href="#">
                      {{ sortByTitle }}&nbsp;
                      <i class="glyphicon glyphicon-chevron-down"></i>
                  </button>
                  <ul class="dropdown-menu dropdown-category text-left pull-right">
                      {% for name,sort in sort_options %}
                      <li><a class="small" href="{{app.request.getUrl({'sort':name,'page':1})}}">{{name}}</a></li>
                      {% endfor %}
                  </ul>
              </form>
          </div>                 
          {# End filters #}
        </div> <!-- /Products Filter -->

        <div class="product-grid row">  <!-- Products Grid Row -->
          {# Category product grid #}
          {% set items_per_row = 3 %}
          <div class="products-category"> <!-- Products Category -->
            {% if search_suggestion is not empty %}
            <div class="col-sm-12">
                <p>Showing results for <strong><i>{{search_suggestion}}</i></strong></p>
            </div>
            {% endif %}
            {% if products.num_total == 0 and categories is empty %}
            <div class="col-sm-12">
                No products found. <a href="{{app.url}}/{{ app.request.url}}">Go back</a>
            </div>
            {% endif %}
              {% set options = ['image'] %}
               {% for row,product in products if collection_ids[product.id] is empty and product_count < 13 %}
                  {% if product.group == 'product' %}
                      {% for id in product.product.collection_id %}
                          {% set collection_ids = collection_ids|merge({(id):true}) %}
                      {% endfor %}
                  {% else %}
                      {% set collection_ids = (collection_ids|default({}))|merge({(product.id):true}) %}
                  {% endif %}
                  {% set product_count = product_count + 1 %}
                  {# Begin product #}
                  {% set product =  product|merge({'variant':product.product|values_in('variant')}) %}
                  {% set product =  product|merge({'attributes':product.variant|values_in(['price','compare_price','save_price','save_percent','color'])}) %}
                      
                 {% if 'image' in options %}
                  {# Grab image based on color facets #}
                  {% set img_url = product.thumbnail %}
                  {% set variant_images = [] %}

                  {% if product.attributes.color|length > 1 %}
                      {% set current_colors = [] %}
                      {% for variant in product.variant 
                          if variant.status == 'active' and variant.color not in current_colors and variant.images is not empty %}
                              {% set img_url = variant.thumbnail %}
                              {% set current_colors = current_colors|merge([variant.color]) %}
                              {% set variant_images = variant_images|merge([variant.images[0]]) %}
                      {% endfor %}
                  {% endif %}

                  {% set secure =  app.url_asset | slice(0,5)  %}
                  {% if secure == 'https' %}
                  {% set img_url = img_url | replace({'http:':'https:'}) %}
                  {% endif %}

                  {% if variant_images is empty %}
                    {% set variant_images = product.images %}
                    {% set image_url = app.image.getImageUrl('product','serena', variant_images[0].id) %}
                {% endif %}
            {% endif %}
          </div> <!-- / End Products Category -->
          {# Begin product #}
          <div class="col-sm-6">
            <div class="product clearfix"> <!-- Begin product -->
            <!-- / Begin Image and Details -->
              <div class="image"> 
                <a href="{{ app.url }}/product/{{ product.slug }}"><img onerror="this.src='{{ app.url_asset }}/images/product/image-800x530.jpg'" src="{{ image_url }}" alt="img" class="img-responsive">    
                <span class="productlist-price-container">
                    <span class="product-price-category">
                        <span>
                            {% if product.attributes.price %}
                                {{ prod.price(product.attributes.price) }}
                            {% endif %}
                        </span>
                        {% if product.attributes.compare_price[0] is not empty and product.attributes.compare_price != product.attributes.price %}
                            <span class="original-price">
                                <span>
                                    {{ prod.price(product.attributes.compare_price) }}
                                </span>
                            </span>
                        {% endif %}
                    </span>
                </span>
                <div class="productlist-title-container">
                  <a class="title-category" href="{{ app.url }}/product/{{ product.slug }}">{{ product.title }} </a>
                </div>
                </a>
              </div>
              <!-- / End Image and Details -->
              <div class="productlist-label">
                  {% for tag in product.tags %}
                      {% if tag == 'new' %}
                          <span class="label-new">{{ tag|capitalize }}</span> <!-- class new-label to create ... -->
                      {% elseif tag == 'sale' %}
                          <span class="label-sale">{{ tag|capitalize }}</span> 
                      {% elseif tag == 'popular' %}
                          <span class="label-hot">{{ tag|capitalize }}</span> 
                      {% elseif tag == 'sold-out' %}
                          <span class="sold-out">{{ tag|capitalize }}</span> 
                      {% else %}
                          <span class="label-feat">{{ tag|capitalize }}</span> 
                      {% endif %}
                  {% endfor %}
              </div>
            </div>  <!-- / End Begin product -->
            {% endfor %}
          </div> <!-- / End Col-6 -->
          <!-- Pagination -->
          {% if products|length == limit or app.request.get.page > 1 %}
              <div class="col-md-12">
                  <div class="pagination-bottom">
                      {{ base.pagination(products.num_total,limit,4) }}
                  </div>
              </div>
          {% endif %}
          <!-- /Pagination -->
        </div> <!-- / End Products Grid Row -->
      </div> <!-- /Products Grid Col. Size -->
      <!-- Side Col -->
      <div class="side-col col-sm-3 col-md-3">
      <!-- Side Widget -->
        <div class="panel-group" id="accordionNo">
          {% for name,filter_set in filters %}
            {% if filter_set|length > 1 %}
              {% set filter_count = filters %}
              {% if filter_set|length %}
                {% if filters|length %}
                {% if attribute(filter_query,name) is defined %}
                  {% set current_filter_set = {} %}
                  {% for key,value in filter_query %}
                    {% if key != name %}
                        {% set current_filter_set = current_filter_set|merge({(key):value}) %}
                    {% endif %}
                  {% endfor %}
                {% else %}
                  {% set current_filter_set = filter_query %}
                {% endif %}
              {% if current_filter_set is not empty %}
              {% set filter_count = api.get('/catalog', {
                "query":current_filter_set|merge(default_query),
                "search":app.request.get.s,
                "attributes":name,
                "format":"attributes",}) %}
              {% endif %}
          {% endif %}
          <div class="filter">
              {# Seperating each custom left nav into it's own include, ie: color chips for colors, or stars for customer reviews #}
              {% include  '/category/_partials/filter-' ~ (name in ['color','price','review_score','category_id'] ? name : 'default') ~ '.html.twig' %}                    
          </div>
          {% endif %}
          {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>  
  </div>  <!-- /Products Grid -->
</div> <!-- /Wrap --> 
{% endspaceless %}
